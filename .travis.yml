dist: xenial
language: bash
branches:
  only:
  - prod
  - test
  - dev
env:
- GOOGLE_APPLICATION_CREDENTIALS=${TRAVIS_BUILD_DIR}/sa-key.json tf_version=0.14.8 tf_init_cli_options="-input=false -lock=false" tf_validation_cli_options="-input=false" tf_plan_cli_options="-lock=false" tf_apply_cli_options="-auto-approve -input=false -lock=false"
stages:
- terraform_plan
- terraform_apply
before_install:
- openssl aes-256-cbc -K $encrypted_5e79b6be7e62_key -iv $encrypted_5e79b6be7e62_iv
  -in sa-key.json.enc -out sa-key.json -d
- wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
- unzip terraform_"$tf_version"_linux_amd64.zip
- sudo mv terraform /usr/local/bin/
- rm terraform_"$tf_version"_linux_amd64.zip
- chmod 764 format-validation.sh #Ensure that we have permissions to execute the script
jobs:
  include:
  - stage: terraform_plan
    if: type IN (pull_request) AND branch IN (prod, test, dev)
    script:
    - terraform init $tf_init_cli_options
    - terraform validate
    - ./format-validation.sh
    - terraform plan -var-file=${TRAVIS_BUILD_DIR}/env/dev/vars.tfvars $tf_plan_cli_options
    - terraform apply -var-file=${TRAVIS_BUILD_DIR}/env/dev/vars.tfvars $tf_apply_cli_options
  - stage: terraform_apply
    if: type IN (push) AND branch in (prod, test, dev)
    script:
    - terraform init $tf_init_cli_options
#    - terraform apply $tf_apply_cli_options
